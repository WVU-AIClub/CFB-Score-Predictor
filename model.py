# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i1BKszyqMmUO3YKsc54amrB7Aqwlhex-
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score


# Importing the data
FILE_PATH = 'cfb2023.xlsx'
data = pd.read_excel(FILE_PATH)

# Features and target
features = data.columns[2:]
target = 'OPts(Test)'


X = data[features]
y = data[target]


# Splitting data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create the Random Forest model
# here the link to the documentation
# https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestRegressor.html

rf_model = RandomForestRegressor(n_estimators=100, random_state=42)

# Train the model
rf_model.fit(X_train, y_train)

"""Prediction and Evaluation of model"""

# Feature importance
feature_importance = pd.Series(rf_model.feature_importances_, index=features).sort_values(ascending=False)
print("\nFeature Importance:\n", feature_importance)

# Make predictions
y_pred = rf_model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R^2 Score: {r2}")


### Predicting WVU & OSU Game

wvu_osu = [[13.7, 25.5, 53.8, 205.7, 1.4, 43.5, 228.9, 5.3, 2.5, 68.9, 434.6, 6.3, 7.8, 12.2, 2.2, 22.3, 5.2, 46.3, 0.5, 0.5, 1.1, 28.6, 19.2, 31.6, 60.7, 275, 1.9, 36.6, 166.8, 4.6, 1.6, 68.2, 441.8, 6.5, 10.4, 8.6, 1.1, 20, 5.6, 45.2, 0.7, 0.9, 1.6]]
osu_wvu = [[24.6, 40.7, 60.4, 276.5, 1.3, 32.1, 155.3, 4.8, 2.1, 72.8, 431.8, 5.9, 13.3, 7, 1.4, 21.6, 5, 41.4, 0.4, 1.1, 1.5, 26.2, 19.3, 32.1, 60.2, 237.4, 2, 33.8, 143.4, 4.2, 1.2, 65.8, 380.8, 5.8, 10.5, 8.2, 1.2, 19.8, 6.3, 56.7, 0.4, 0.8, 1.2]]

print("WVU", rf_model.predict(wvu_osu))
print("OSU", rf_model.predict(osu_wvu))


### Look through the first 50 sets and see what there is
# for i in range(50):
#   test = [list(data.iloc[i, 2:])]

#   print()

#   print(rf_model.predict(test))
#   print(data.iloc[i, 0], data.iloc[i, 1])

### Predicting WVU & IOWA STATE game

wvu_iowa = [[15.2, 26.2, 58.0, 216.6, 1.6, 42.4, 223.0, 5.3, 2.6, 68.6, 439.6, 6.4, 10.0, 12.8, 2.4, 25.2, 3.6, 28.2, 0.6, 1.0, 1.6,10.0, 14.6, 28.4, 51.4, 133.6, 0.8, 33.2, 138.0, 4.2, 0.4, 61.6, 271.6, 4.4, 7.8, 7.2, 1.0, 16.0, 4.8, 50.2, 0.6, 1.6, 2.2]]
iowa_wvu = [[18.4, 28.0, 65.7, 244.4, 1.8, 36.2, 183.4, 5.1, 1.8, 64.2, 427.8, 6.7, 10.6, 8.0, 2.2, 20.8, 4.0, 31.2, 0.0, 0.8, 0.8,25.6, 16.0, 27.2, 58.8, 243.4, 2.2, 34.8, 130.2, 3.7, 1.2, 62.0, 373.6, 6.0,11.0, 8.0, 1.4, 20.4, 7.0, 61.2, 0.4, 0.6, 1.0]]

print("WVU", rf_model.predict(wvu_iowa))
print("ISU", rf_model.predict(iowa_wvu))